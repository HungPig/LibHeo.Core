/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package LibHeo.ViewApp;

import LibHeo.Application.Student;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class CRUD_STUDENT extends javax.swing.JFrame {

    private int stt = 1;
    private DefaultTableModel tablemodel;
    private SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
    private ArrayList<Student> studentList = new ArrayList<>();

    /**
     * Creates new form CRUD_STUDENT
     */
    public CRUD_STUDENT() {
        initComponents();
        setLocationRelativeTo(null);
        tablemodel = (DefaultTableModel) TableStudent.getModel();
        addGruop();
        loadData();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        Search = new javax.swing.JPanel();
        RadioByName = new javax.swing.JRadioButton();
        RadioByID = new javax.swing.JRadioButton();
        RadioByclass = new javax.swing.JRadioButton();
        txtSearch = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtStudentID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        RadioMale = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        RadioFemale = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TxtAddress = new javax.swing.JTextField();
        txtClass = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtSdt = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtMajor = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableStudent = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        ButtonAdd = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Search.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        RadioByName.setSelected(true);
        RadioByName.setText("Tìm Kiếm Theo Tên Sinh Viên");

        RadioByID.setText("Tìm Kiếm Theo Mã Sinh Viên");

        RadioByclass.setText("Tìm Kiếm Theo Lớp");

        SearchButton.setText("Tìm Kiếm");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SearchLayout = new javax.swing.GroupLayout(Search);
        Search.setLayout(SearchLayout);
        SearchLayout.setHorizontalGroup(
            SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RadioByName)
                    .addGroup(SearchLayout.createSequentialGroup()
                        .addComponent(RadioByID)
                        .addGap(230, 230, 230)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SearchButton))
                    .addComponent(RadioByclass))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SearchLayout.setVerticalGroup(
            SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RadioByName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RadioByID)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RadioByclass)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Mã SV");

        jLabel2.setText("Tên SV");

        jLabel3.setText("Chuyên Ngành");

        RadioMale.setText("Nam");

        jLabel4.setText("Giới Tính");

        RadioFemale.setText("Nữ");

        jLabel5.setText("Ngày Sinh");

        jLabel6.setText("Địa Chỉ");

        jLabel7.setText("Lớp");

        jLabel8.setText("Số Đt");

        jLabel9.setText("Email");

        jLabel10.setText("Password");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(RadioFemale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RadioMale))
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(224, 224, 224)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(TxtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtClass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMajor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(RadioMale)
                            .addComponent(RadioFemale))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        TableStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã SV", "Tên SV", "Giới Tính", "Ngày Sinh", "Lớp", "Địa Chỉ", "Chuyên Ngành", "SDT", "Email", "Password"
            }
        ));
        TableStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableStudentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableStudent);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ButtonAdd.setText("Thêm");
        ButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddActionPerformed(evt);
            }
        });

        jButton3.setText("Sữa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Xoá");

        jButton5.setText("Làm Mới");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(ButtonAdd)
                .addGap(182, 182, 182)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(147, 147, 147)
                .addComponent(jButton5)
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonAdd)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jMenu1.setText("System");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(Search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        loadStudentList();
        loadData();
    }//GEN-LAST:event_formWindowOpened
    private void loadStudentList() {
        studentList = new ArrayList<>();
        File file = new File("./database/Student.dat");

        try (Scanner sc = new Scanner(file)) {
            while (sc.hasNextLine()) {
                String line = sc.nextLine();
                String[] data = line.split("\\$");

                if (data.length < 10) {
                    System.out.println("Dữ liệu không đầy đủ: " + line);
                    continue;
                }

                Student student = new Student(
                        Integer.parseInt(data[0]),
                        data[4],
                        data[6],
                        data[7],
                        data[8],
                        data[1],
                        data[9],
                        df.parse(data[3]),
                        data[5],
                        data[2]
                );
                studentList.add(student);
            }
        } catch (Exception e) {
            System.out.println("Lỗi khi đọc file: " + e.getMessage());
        }
    }

    private void ButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddActionPerformed
        if (!isEmply()) {
            try {
                var StudentID = txtStudentID.getText();
                var Hoten = txtName.getText();
                var Class = txtClass.getText();
                var Major = txtMajor.getText();
                var Phone = txtSdt.getText();
                var Email = txtEmail.getText();
                var diachi = TxtAddress.getText();
                var Password = txtPassword.getText();
                var Gender = "";
                if (RadioMale.isSelected()) {
                    Gender = "Nam";
                } else if (RadioFemale.isSelected()) {
                    Gender = "Nữ";
                }
                var NgaySinh = txtDate.getText();
                var NgaysinhDate = df.parse(NgaySinh);
                Student newStudent = new Student(
                        Integer.parseInt(StudentID), Class, Major, Phone, Email,
                        Hoten, Password, NgaysinhDate, diachi, Gender
                );
                File file = new File("./database/Student.dat");
                FileWriter fw = new FileWriter(file, true);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.append(StudentID + "$" + Hoten + "$" + Gender + "$" + df.format(NgaysinhDate) + "$" + Class + "$"
                        + diachi + "$" + Major + "$" + Phone + "$" + Email + "$" + Password + "\n");
                bw.newLine();
                bw.close();
                addTableModel(newStudent);
            } catch (NumberFormatException ex) {
                System.out.println("Dinh Dang Chuyen Doi Bi Sai !");
            } catch (ParseException ex) {
                System.out.println("Dinh Dang Ngay Sinh Bi Sai !");
            } catch (IOException ex) {
                Logger.getLogger(CRUD_STUDENT.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "vui long nhap du");
        }
    }//GEN-LAST:event_ButtonAddActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        File file = new File("./database/Student.dat");
        ArrayList<Student> listemp = new ArrayList<>();

        try {
            Scanner sc = new Scanner(file);
            while (sc.hasNextLine()) {
                String array = sc.nextLine();
                String[] arrayListStudent = array.split("\\$");
                if (arrayListStudent.length < 10) {
                    System.out.println("Du lieu khong đay đu: " + array);
                    continue;
                }
                var StudentID = arrayListStudent[0];
                var Name = arrayListStudent[1];
                var Sex = arrayListStudent[2];
                var NgaySinh = arrayListStudent[3];
                var Class = arrayListStudent[4];
                var Diachi = arrayListStudent[5];
                var Major = arrayListStudent[6];
                var Sdt = arrayListStudent[7];
                var Email = arrayListStudent[8];
                var Password = arrayListStudent[9];

                try {
                    Student sd = new Student(
                            Integer.parseInt(StudentID), Class, Major, Sdt, Email,
                            Name, Password, df.parse(NgaySinh), Diachi, Sex
                    );
                    listemp.add(sd);
                    addTableModel(sd);
                } catch (ParseException e) {
                    System.out.println("Loi Dinh Dang: " + Name);
                } catch (NumberFormatException e) {
                    System.out.println("Chuyen Doi Bi Sai: " + Name);
                }
            }
            sc.close();
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, "Khong Tim Thay File: " + e.getMessage());
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        String searchText = txtSearch.getText();
        ArrayList<Student> result = new ArrayList<>();
        if (searchText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập từ khóa tìm kiếm!");
            return;
        }
        if (RadioByName.isSelected()) {
            result = SearchByname(searchText);
        } else if (RadioByID.isSelected()) {
            result = searchByID(searchText);
        } else if (RadioByclass.isSelected()) {
            result = searchByClass(searchText);
        }
        if (result.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy kết quả!");
        }
        updateTable(result);
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultTableModel model = (DefaultTableModel) TableStudent.getModel();
        int i = TableStudent.getSelectedRow();

        try {
            if (i >= 0) {
                // Cập nhật giá trị vào bảng
                String studentID = txtStudentID.getText();
                String name = txtName.getText();
                String date = txtDate.getText();
                String studentClass = txtClass.getText();
                String address = TxtAddress.getText();
                String major = txtMajor.getText();
                String sdt = txtSdt.getText();
                String email = txtEmail.getText();
                String password = txtPassword.getText();
                String gender = RadioMale.isSelected() ? "Nam" : "Nữ";

                // Cập nhật bảng
                model.setValueAt(studentID, i, 1);
                model.setValueAt(name, i, 2);
                model.setValueAt(gender, i, 3);
                model.setValueAt(date, i, 4);
                model.setValueAt(studentClass, i, 5);
                model.setValueAt(address, i, 6);
                model.setValueAt(major, i, 7);
                model.setValueAt(sdt, i, 8);
                model.setValueAt(email, i, 9);
                model.setValueAt(password, i, 10);
                //
                var StudentID = txtStudentID.getText();
                var Hoten = txtName.getText();
                var Class = txtClass.getText();
                var Major = txtMajor.getText();
                var Phone = txtSdt.getText();
                var Email = txtEmail.getText();
                var diachi = TxtAddress.getText();
                var Password = txtPassword.getText();
                var Gender = "";
                if (RadioMale.isSelected()) {
                    Gender = "Nam";
                } else if (RadioFemale.isSelected()) {
                    Gender = "Nữ";
                }
                var NgaySinh = txtDate.getText();
                var NgaysinhDate = df.parse(NgaySinh);
                Student newStudent = new Student(
                        Integer.parseInt(StudentID), Class, Major, Phone, Email,
                        Hoten, Password, NgaysinhDate, diachi, Gender
                );
                File file = new File("./database/Student.dat");
                FileWriter fw = new FileWriter(file, false);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.append(StudentID + "$" + Hoten + "$" + Gender + "$" + df.format(NgaysinhDate) + "$" + Class + "$"
                        + diachi + "$" + Major + "$" + Phone + "$" + Email + "$" + Password + "\n");
                bw.newLine();
                bw.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Đã có lỗi xảy ra khi cập nhật thông tin: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void TableStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableStudentMouseClicked
        int selectedrow = TableStudent.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) TableStudent.getModel();
        if (selectedrow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng!");
            return;
        }
        txtStudentID.setText(model.getValueAt(selectedrow, 1).toString());
        txtName.setText(model.getValueAt(selectedrow, 2).toString());
        String gender = (String) (model.getValueAt(selectedrow, 3));
        if ("Nữ".equals(gender)) {
            RadioMale.setSelected(false);
            RadioFemale.setSelected(true);
        } else if ("Nam".equals(gender)) {
            RadioFemale.setSelected(false);
            RadioMale.setSelected(true);
        } else {
            RadioFemale.setSelected(false);
            RadioMale.setSelected(false);
        }
        txtDate.setText(model.getValueAt(selectedrow, 4).toString());
        txtClass.setText(model.getValueAt(selectedrow, 5).toString());
        TxtAddress.setText(model.getValueAt(selectedrow, 6).toString());
        txtMajor.setText(model.getValueAt(selectedrow, 7).toString());
        txtSdt.setText(model.getValueAt(selectedrow, 8).toString());
        txtEmail.setText(model.getValueAt(selectedrow, 9).toString());
        txtPassword.setText(model.getValueAt(selectedrow, 10).toString());
    }//GEN-LAST:event_TableStudentMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUD_STUDENT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUD_STUDENT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUD_STUDENT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUD_STUDENT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUD_STUDENT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAdd;
    private javax.swing.JRadioButton RadioByID;
    private javax.swing.JRadioButton RadioByName;
    private javax.swing.JRadioButton RadioByclass;
    private javax.swing.JRadioButton RadioFemale;
    private javax.swing.JRadioButton RadioMale;
    private javax.swing.JPanel Search;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTable TableStudent;
    private javax.swing.JTextField TxtAddress;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtClass;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMajor;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStudentID;
    // End of variables declaration//GEN-END:variables

    private void addTableModel(Student sd) {
        var row = new Object[]{stt++, sd.getStudentID(), sd.getUsername(), sd.getGioiTinh(), df.format(sd.getNgaySinh()), sd.getStudentClass(),
            sd.getDiaChi(), sd.getMajor(), sd.getPhone(), sd.getEmail(), sd.getPassword()};
        tablemodel.addRow(row);
    }

    private void saveStudentsToFile() {
        File file = new File("./database/Student.dat");
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(file))) {
            for (Student student : studentList) {
                bw.write(student.getStudentID() + "$"
                        + student.getUsername() + "$"
                        + student.getGioiTinh() + "$"
                        + student.getGioiTinh() + "$"
                        + student.getStudentClass() + "$"
                        + student.getDiaChi() + "$"
                        + student.getMajor() + "$"
                        + student.getPhone() + "$"
                        + student.getEmail() + "$"
                        + student.getPassword());
                bw.newLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private boolean isEmply() {
        return txtName.getText().isEmpty() || txtClass.getText().isEmpty() || txtDate.getText().isEmpty() || txtSdt.getText().isEmpty()
                || txtStudentID.getText().isEmpty() || TxtAddress.getText().isEmpty() || Checkgender();
    }

    private boolean Checkgender() {
        return !(RadioMale.isSelected() || RadioFemale.isSelected());
    }

    //search by name
    private ArrayList<Student> SearchByname(String name) {
        ArrayList<Student> result = new ArrayList<>();
        for (Student student : studentList) {
            if (student.getUsername().toLowerCase().contains(name.toLowerCase())) {
                result.add(student);
            }
        }
        return result;
    }

    private ArrayList<Student> searchByID(String id) {
        ArrayList<Student> result = new ArrayList<>();
        for (Student student : studentList) {
            if (String.valueOf(student.getStudentID()).contains(id)) {
                result.add(student);
            }
        }
        return result;
    }

    private ArrayList<Student> searchByClass(String className) {
        ArrayList<Student> result = new ArrayList<>();
        for (Student student : studentList) {
            if (student.getStudentClass().toLowerCase().contains(className.toLowerCase())) {
                result.add(student);
            }
        }
        return result;
    }

    private void loadData() {
        File file = new File("./database/Student.dat");
        ArrayList<Student> listemp = new ArrayList<>();

        try {
            Scanner sc = new Scanner(file);
            while (sc.hasNextLine()) {
                String array = sc.nextLine();
                String[] arrayListStudent = array.split("\\$");
                if (arrayListStudent.length < 10) {
                    System.out.println("Dữ liệu không đầy đủ: " + array);
                    continue;
                }
                var StudentID = arrayListStudent[0];
                var Name = arrayListStudent[1];
                var Sex = arrayListStudent[2];
                var NgaySinh = arrayListStudent[3];
                var Class = arrayListStudent[4];
                var Diachi = arrayListStudent[5];
                var Major = arrayListStudent[6];
                var Sdt = arrayListStudent[7];
                var Email = arrayListStudent[8];
                var Password = arrayListStudent[9];

                try {
                    Student sd = new Student(
                            Integer.parseInt(StudentID), Class, Major, Sdt, Email,
                            Name, Password, df.parse(NgaySinh), Diachi, Sex
                    );
                    listemp.add(sd);
                    addTableModel(sd);
                } catch (ParseException e) {
                    System.out.println("Lỗi định dạng ngày sinh cho sinh viên: " + Name);
                } catch (NumberFormatException e) {
                    System.out.println("Lỗi chuyển đổi dữ liệu số cho sinh viên: " + Name);
                }
            }
            sc.close();
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, "Không tìm thấy file: " + e.getMessage());
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    private void updateTable(ArrayList<Student> result) {
        tablemodel.setRowCount(0);
        for (Student student : result) {
            var row = new Object[]{
                stt++, // Số thứ tự
                student.getStudentID(),
                student.getUsername(),
                student.getGioiTinh(),
                df.format(student.getNgaySinh()),
                student.getStudentClass(),
                student.getDiaChi(),
                student.getMajor(),
                student.getPhone(),
                student.getEmail(),
                student.getPassword()
            };
            tablemodel.addRow(row);
        }
    }

    private void addGruop() {
        buttonGroup1.add(RadioMale);
        buttonGroup1.add(RadioFemale);
    }
}
